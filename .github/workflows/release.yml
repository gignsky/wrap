name: Release

on:
  push:
    tags:
      - 'v*' # This will trigger the workflow on any push to a tag starting with 'v'

permissions:
  contents: write

jobs:
  build:
    name: Build binaries
    runs-on: ubuntu-latest
    strategy:
      matrix:
        target:
          - x86_64-unknown-linux-gnu
          # - x86_64-apple-darwin
          - x86_64-pc-windows-gnu
        binary_name:
          - wrap
          - wrapper
          - wrapd
    steps:
      - uses: actions/checkout@v4

      - uses: DeterminateSystems/nix-installer-action@main

      - name: Install Rust toolchain
        uses: dtolnay/rust-toolchain@stable
        with:
          targets: ${{ matrix.target }}

      - name: Install zig and cargo-zigbuild
        run: nix profile install --accept-flake-config nixpkgs#zig nixpkgs#cargo-zigbuild

      - name: Build binary
        run: cargo zigbuild --release --target ${{ matrix.target }}

      - name: Rename binary for upload
        run: |
          CURRENT_TAG=${{ github.ref_name }}
          ext=""
          if [[ "${{ matrix.target }}" == *windows* ]]; then ext=".exe"; fi
          mkdir -p dist
          cp target/${{ matrix.target }}/release/wrap$ext dist/${{ matrix.binary_name }}-${{ matrix.target }}$ext

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: binaries-${{ matrix.binary_name }}-${{ matrix.target }}
          path: dist/*

  release:
    name: Create Release
    needs: build
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Download binaries
        uses: actions/download-artifact@v4
        with:
          pattern: binaries-*
          path: dist
          merge-multiple: true

      - name: Extract tag version
        id: extract_version
        run: echo "::set-output name=version::${GITHUB_REF#refs/tags/v}" # Extracts '1.0.0' from 'refs/tags/v1.0.0'

      - name: Generate changelog
        id: changelog
        run: |
          # Use GITHUB_REF_NAME to get the current tag name
          CURRENT_TAG=${{ github.ref_name }}
          PREV_TAG=$(git tag --sort=-creatordate | grep -v "$CURRENT_TAG" | head -n 1) # Get the previous tag, excluding the current one
          if [ -z "$PREV_TAG" ]; then
            echo "No previous tag found, using all history up to current tag."
            git log --oneline "$CURRENT_TAG" > changelog.txt
          else
            echo "Generating changelog from $PREV_TAG to $CURRENT_TAG"
            git log --oneline "$PREV_TAG".."$CURRENT_TAG" > changelog.txt
          fi
          # Ensure changelog.txt is not empty if no commits between tags
          if [ ! -s changelog.txt ]; then
            echo "No changes found between $PREV_TAG and $CURRENT_TAG."
            echo "Initial release or no new commits since last tag." > changelog.txt
          fi


      - name: Create GitHub Release
        uses: softprops/action-gh-release@v2
        with:
          tag_name: ${{ github.ref_name }} # Use the full tag name from the event
          name: Release ${{ github.ref_name }}
          files: dist/*
          body_path: changelog.txt
          draft: false
          prerelease: false
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}